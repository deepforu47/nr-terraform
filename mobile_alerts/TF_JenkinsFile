String repoUrl = "https://github.com/deepforu47/nr-terraform/tree/master/mobile_alerts"
String branchName = env.BRANCH_NAME
pipeline {
    agent any

    parameters {
        string(name: 'environment', defaultValue: 'default', description: 'Workspace/environment file to use for deployment')
        string(name: 'version', defaultValue: '', description: 'Version variable to pass to /usr/local/bin/terraform')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: 'Brnach Name')
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '2', artifactNumToKeepStr: '3'))
    }
    
    environment {
        NEW_RELIC_API_KEY=credentials('NR_API_KEY')
        NEW_RELIC_REGION=credentials('NR_Region')
        NEW_RELIC_ACCOUNT_ID=credentials('NR_ACC_ID')
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: '${BRANCH_NAME}',
                    url: 'https://github.com/deepforu47/nr-terraform'

                sh "ls -lat"
            }
        }
        stage('Plan') {
            steps {
                script {
                    currentBuild.displayName = params.version
                }
                dir('mobile_alerts')
                {
                    sh 'ls -lrth'
                    sh '/usr/local/bin/terraform init -input=false'
                    //sh '/usr/local/bin/terraform workspace select ${environment}'
                    sh "/usr/local/bin/terraform plan -out tfplan "
                    sh '/usr/local/bin/terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }

        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }

            steps {
                script {
                    dir('mobile_alerts')
                    {
                        def plan = readFile 'tfplan.txt'
                        input message: "Do you want to apply the plan?",
                            parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                    }
                }
            }
        }

        stage('Apply') {
            steps {
                dir('mobile_alerts')
                {
                    sh "/usr/local/bin/terraform apply -input=false tfplan"
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'tfplan.txt'
        }
    }
}